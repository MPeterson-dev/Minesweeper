﻿@using Milestone.Models
@model Milestone.Models.BoardModel


<style>
    .game-button {
        width: 65px;
        height: 65px;
        border: solid 2px;
        border-color: #DCDCDC;
        margin: .25em;
    }

    .button-image {
        width: 65px;
        height: 60px;
        position: center;
    }

    .game-board {
        display: flex;
        flex-wrap: wrap;
    }

    .line-break {
        flex-basis: 100%;
        height: 0;
    }

    .center {
        display: flex;
        align-items: center;
        justify-content: center;
        vertical-align: middle;
    }
</style>

@{
    string[] names = { "0.png", "1.png", "2.png", "3.png", "4.png", "5.png", "6.png", "7.png", "8.png", "9.png","10.png","11.png" };

    <h5 class="center"> Minesweeper </h5>
    <form asp-controller="Minesweeper" asp-action="ButtonClick">

        <div class="game-board center">
            @for (int r = 0; r < Model.getSize(); r++)
            {

                @for (int c = 0; c < Model.getSize(); c++)
                {

                    if (@c % 10 == 0)
                    {
                        <div class="line-break"> </div>
                    }
                    <div>
                        <button class="cell game-button" type="submit" value=@r+@c name="rowcol">

                            <img class="button-image" src="~/img/@names[Model.Grid[r,c].ButtonState]" id="center" />
                            
                        </button>
                    </div>
                }
            }
        </div>
    </form>
}